<template>
  <div class="page" data-name="targets">
    <div class="navbar">
      <div class="navbar-bg"></div>
      <div class="navbar-inner">
        <div class="left no-display-medium">
          <a class="link panel-open">
            <i class="icon f7-icons">list_bullet</i>
          </a>
        </div>
        <div class="title">Взносы</div>
        <div class="right">
          <a class="link" @click=${() => serachbarActive.value = true}>
            <i class="icon f7-icons">search</i>
          </a>
        </div>
        <${NavbarSearchbar} placeholder="Поиск взноса" search-container="#target-list" search-in=".item-title" active=${serachbarActive.value} @searchbar:close=${() => serachbarActive.value = false}></${NavbarSearchbar}>
      </div>
    </div>

    <div class="fab fab-right-bottom">
      <a href="new/">
        <i class="icon f7-icons">plus</i>
      </a>
    </div>

    <div class="page-content">
      <div class="page-container">
        <div class="block text-align-center searchbar-not-found">
          Взносов не найдено
        </div>

        ${loading.value && $h`
          <div class="list media-list medium-inset">
            <ul>
              ${[1, 2, 3, 4, 5].map(() => $h`
                <li class="item-content skeleton-effect-wave">
                  <div class="item-media">
                    <div class="item-icon skeleton-block"></div>
                  </div>
                  <div class="item-inner skeleton-text">
                    <div class="item-title-row">
                      <div class="item-title">Type</div>
                    </div>
                    <div class="item-subtitle">Amount</div>
                    <div class="item-text">Lorem ipsum dolor sit amet</div>
                  </div>
                </li>
              `)}
            </ul>
          </div>
        `}

        <div class="list virtual-list media-list medium-inset searchbar-found" id="target-list"></div>
      </div>
    </div>
  </div>
</template>

<script>
import NavbarSearchbar from '@/components/navbar-searchbar.f7';

export default (props, { $f7, $ref, $on, $el }) => {
  const serachbarActive = $ref(false);
  const loading = $ref(false);
  let virtualList;
  let items = [];

  $on('pageInit', () => {
    initVirtualList();
    loadData();

    $f7.on('target:create', (target) => {
      items.push(target);
      virtualList.appendItem(target);
    });
    $f7.on('target:update', (target) => {
      const index = items.findIndex((i) => i.target_id === target.target_id);

      if (index >= 0) {
        items.splice(index, 1, target);
        virtualList.replaceItem(index, target);
      }
    });
    $f7.on('target:delete', (targetId) => {
      const index = items.findIndex((i) => i.target_id === targetId);

      if (index >= 0) {
        items.splice(index, 1);
        virtualList.deleteItem(index);
      }
    });
  });

  function initVirtualList() {
    virtualList = $f7.virtualList.create({
      el: $el.value.find('.virtual-list'),
      items: items,
      searchAll: (query, items) => {
        let found = [];
        for (let i = 0; i < items.length; i++) {
          const displayItem = query.trim() === '' ||
            query.toLowerCase().split(' ').every((word) =>
              items[i].type.toLowerCase().indexOf(word) >= 0 ||
              items[i].comment.toLowerCase().indexOf(word) >= 0 ||
              `${String(items[i].period.month).padStart(2, '0')}.${String(items[i].period.year).padStart(2, '0')}`.toLowerCase().indexOf(word) >= 0
            );

          if (displayItem) found.push(i);
        }
        return found; //return array with mathced indexes
      },
      renderItem(item) {
        return `
          <li>
            <a href="${item.target_id}/" class="item-link item-content">
              <div class="item-media">
                <div class="item-icon bg-color-primary">
                  <i class="icon f7-icons">money_rubl_circle</i>
                </div>
              </div>
              <div class="item-inner">
                <div class="item-title-row">
                  <div class="item-title">${item.type}</div>
                  <div class="item-after">
                    ${String(item.period.month).padStart(2, '0')}.${item.period.year}
                  </div>
                </div>
                <div class="item-subtitle">
                  ${item.cost.toLocaleString()} ₽
                </div>
                <div class="item-text">
                  ${item.comment || 'Нет описания'}
                </div>
              </div>
            </a>
          </li>
        `;
      },
      height: 97,
    });
  }

  function loadData() {
    loading.value = true;

    $f7.request.json('/api/targets', (data, status, xhr) => {
      items = data.data;
      virtualList.appendItems(items);
      loading.value = false;
    }, (xhr, status, message) => {
      if (status !== 401) loading.value = false;
    });
  }

  $on('pageBeforeremove', () => {
    $f7.off('target:create');
    $f7.off('target:update');
    $f7.off('target:delete');
    virtualList.destroy();
  });

  return $render;
}
</script>
