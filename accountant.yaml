openapi: 3.0.3

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/iv-menshenin/accountant/1.0.0
  - description: devaliada.ru
    url: https://victoria.devaliada.ru

info:
  version: "1.0.0"
  title: Accountant Application
  description: ""

security:
  - ApiKeyAuth: []

paths:

  /auth/login:
    post:
      summary: "Authentication"
      requestBody:
        $ref: "#/components/requestBodies/Credentials"
      responses:
        '200':
          $ref: "#/components/responses/AuthInfo"

  /auth/refresh:
    post:
      summary: "Refresh token"
      requestBody:
        $ref: "#/components/requestBodies/Token"
      responses:
        '200':
          $ref: "#/components/responses/AuthInfo"

  /api/accounts:
    get:
      summary: "Find Accounts"
      parameters:
        - name: account
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
          $ref: "#/components/responses/Accounts"
        '404':
          description: Not found
    post:
      summary: "Create new Account"
      requestBody:
        $ref: "#/components/requestBodies/AccountData"
      responses:
        '200':
          $ref: "#/components/responses/Accounts"

  /api/accounts/{account_id}:
    get:
      summary: "Get Account information"
      parameters:
        - $ref: "#/components/parameters/AccountIDPath"
      responses:
        '200':
          $ref: "#/components/responses/Account"
        '404':
          description: Not found
    put:
      summary: "Change Account information"
      parameters:
        - $ref: "#/components/parameters/AccountIDPath"
      requestBody:
        $ref: "#/components/requestBodies/AccountData"
      responses:
        '200':
          $ref: "#/components/responses/Account"
        '404':
          description: Not found
    delete:
      summary: "Delete Account"
      parameters:
        - $ref: "#/components/parameters/AccountIDPath"
      responses:
        '204':
          description: Deleted
        '404':
          description: Not found

  /api/accounts/{account_id}/persons:
    post:
      summary: "Add Person to Account"
      parameters:
        - $ref: "#/components/parameters/AccountIDPath"
      requestBody:
        $ref: "#/components/requestBodies/PersonData"
      responses:
        '200':
          $ref: "#/components/responses/Person"
        '404':
          description: Not found

  /api/accounts/{account_id}/persons/{person_id}:
    get:
      summary: "Get Person from Account by personID"
      parameters:
        - $ref: "#/components/parameters/AccountIDPath"
        - $ref: "#/components/parameters/PersonIDPath"
      responses:
        '200':
          $ref: "#/components/responses/Person"
        '404':
          description: Not found

    put:
      summary: "Alter Person in Account"
      parameters:
        - $ref: "#/components/parameters/AccountIDPath"
        - $ref: "#/components/parameters/PersonIDPath"
      requestBody:
        $ref: "#/components/requestBodies/PersonData"
      responses:
        '200':
          $ref: "#/components/responses/Person"
        '404':
          description: Not found

    delete:
      summary: "Delete Person from Account"
      parameters:
        - $ref: "#/components/parameters/AccountIDPath"
        - $ref: "#/components/parameters/PersonIDPath"
      responses:
        '200':
          description: Deleted
        '404':
          description: Not found

  /api/accounts/{account_id}/objects:
    post:
      summary: "Add Object to Account"
      parameters:
        - $ref: "#/components/parameters/AccountIDPath"
      requestBody:
        $ref: "#/components/requestBodies/ObjectData"
      responses:
        '200':
          $ref: "#/components/responses/Object"
        '404':
          description: Not found

  /api/accounts/{account_id}/objects/{object_id}:
    get:
      summary: "Get Object from Account by objectID"
      parameters:
        - $ref: "#/components/parameters/AccountIDPath"
        - $ref: "#/components/parameters/ObjectIDPath"
      responses:
        '200':
          $ref: "#/components/responses/Object"
        '404':
          description: Not found

    put:
      summary: "Alter Object in Account"
      parameters:
        - $ref: "#/components/parameters/AccountIDPath"
        - $ref: "#/components/parameters/ObjectIDPath"
      requestBody:
        $ref: "#/components/requestBodies/ObjectData"
      responses:
        '200':
          $ref: "#/components/responses/Object"
        '404':
          description: Not found

    delete:
      summary: "Delete Object from Account"
      parameters:
        - $ref: "#/components/parameters/AccountIDPath"
        - $ref: "#/components/parameters/ObjectIDPath"
      responses:
        '200':
          description: Deleted
        '404':
          description: Not found

  /api/accounts/{account_id}/bills:
    post:
      summary: "Add Bill to Account"
      parameters:
        - $ref: "#/components/parameters/AccountIDPath"
      requestBody:
        $ref: "#/components/requestBodies/BillData"
      responses:
        '200':
          $ref: "#/components/responses/Bill"
        '404':
          description: Not found

  /api/persons:
    get:
      summary: "Find Persons by filter parameters"
      parameters:
        - $ref: "#/components/parameters/AccountIDQuery"
        - name: person
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
          $ref: "#/components/responses/Persons"
        '404':
          description: Not found

  /api/objects:
    get:
      summary: "Find Objects by filter parameters"
      parameters:
        - $ref: "#/components/parameters/AccountIDQuery"
        - name: address
          in: query
          schema:
            type: string
          required: false
        - name: number
          in: query
          schema:
            type: integer
          required: false
      responses:
        '200':
          $ref: "#/components/responses/Objects"
        '404':
          description: Not found

  /api/targets:
    get:
      summary: "Search Targets by filter"
      parameters:
        - name: show_closed
          in: query
          schema:
            type: boolean
          required: false
        - name: year
          in: query
          schema:
            type: integer
          required: false
        - name: month
          in: query
          schema:
            type: integer
          required: false
      responses:
        '200':
          $ref: "#/components/responses/Targets"
        '404':
          description: Not found

    post:
      summary: "Create new Target"
      parameters:
        - name: type
          in: query
          schema:
            $ref: "#/components/schemas/TargetType"
      requestBody:
        $ref: "#/components/requestBodies/TargetData"
      responses:
        '200':
          $ref: "#/components/responses/Target"

  /api/targets/{target_id}:
    get:
      summary: "Get Target by ID"
      parameters:
        - $ref: "#/components/parameters/TargetIDPath"
      responses:
        '200':
          $ref: "#/components/responses/Target"
        '404':
          description: Not found

    put:
      summary: "Alter Target data"
      parameters:
        - $ref: "#/components/parameters/TargetIDPath"
      requestBody:
        $ref: "#/components/requestBodies/TargetData"
      responses:
        '200':
          $ref: "#/components/responses/Target"
        '404':
          description: Not found

    delete:
      summary: "Delete Target"
      parameters:
        - $ref: "#/components/parameters/TargetIDPath"
      responses:
        '200':
          $ref: "#/components/responses/Target"
        '404':
          description: Not found

  /api/bills:
    get:
      summary: "Find Bills by filter"
      parameters:
        - $ref: "#/components/parameters/AccountIDQuery"
        - $ref: "#/components/parameters/TargetIDQuery"
        - $ref: "#/components/parameters/PaymentIDQuery"
        - $ref: "#/components/parameters/PeriodQuery"
      responses:
        '200':
          $ref: "#/components/responses/Bills"
        '404':
          description: Not found

  /api/bills/{bill_id}:
    get:
      summary: "Get Bill by ID"
      parameters:
        - $ref: "#/components/parameters/BillIDPath"
      responses:
        '200':
          $ref: "#/components/responses/Bill"
        '404':
          description: Not found

    put:
      summary: "Alter Bill data"
      parameters:
        - $ref: "#/components/parameters/BillIDPath"
      requestBody:
        $ref: "#/components/requestBodies/BillData"
      responses:
        '200':
          $ref: "#/components/responses/Bill"
        '404':
          description: Not found

    delete:
      summary: "Delete Bill"
      parameters:
        - $ref: "#/components/parameters/BillIDPath"
      responses:
        '200':
          $ref: "#/components/responses/Bill"
        '404':
          description: Not found

  /api/payments:
    get:
      summary: "Find Payments by filter"
      parameters:
        - $ref: "#/components/parameters/TargetIDQuery"
        - $ref: "#/components/parameters/AccountIDQuery"
        - $ref: "#/components/parameters/PersonIDQuery"
        - $ref: "#/components/parameters/ObjectIDQuery"
      responses:
        '200':
          $ref: "#/components/responses/Payments"
        '404':
          description: Not found

  /api/payments/{payment_id}:
    get:
      summary: "Update Payment data by ID"
      parameters:
        - $ref: "#/components/parameters/PaymentIDPath"
      responses:
        '200':
          $ref: "#/components/responses/Payment"
        '404':
          description: Not found

    put:
      summary: "Get Payment data by ID"
      parameters:
        - $ref: "#/components/parameters/PaymentIDPath"
      requestBody:
        $ref: "#/components/requestBodies/PaymentDataForUpdate"
      responses:
        '200':
          $ref: "#/components/responses/Payment"
        '404':
          description: Not found

    delete:
      summary: "Delete Payment by ID"
      parameters:
        - $ref: "#/components/parameters/PaymentIDPath"
      responses:
        '200':
          description: Deleted
        '404':
          description: Not found

  /api/accounts/{account_id}/payments:
    post:
      summary: "Create new Payment for Account"
      parameters:
        - $ref: "#/components/parameters/AccountIDPath"
      requestBody:
        $ref: "#/components/requestBodies/PaymentDataForInsert"
      responses:
        '200':
          $ref: "#/components/responses/Payment"
        '404':
          description: Not found

components:

  parameters:

    AccountIDPath:
      name: account_id
      in: path
      schema:
        type: string
        format: uuid
      required: true

    PersonIDPath:
      name: person_id
      in: path
      schema:
        type: string
        format: uuid
      required: true

    ObjectIDPath:
      name: object_id
      in: path
      schema:
        type: string
        format: uuid
      required: true

    TargetIDPath:
      name: target_id
      in: path
      schema:
        type: string
        format: uuid
      required: true

    BillIDPath:
      name: bill_id
      in: path
      schema:
        type: string
        format: uuid
      required: true

    PaymentIDPath:
      name: payment_id
      in: path
      schema:
        type: string
        format: uuid
      required: true

    TargetIDQuery:
      name: target_id
      in: query
      schema:
        type: string
        format: uuid
      required: false

    AccountIDQuery:
      name: account_id
      in: query
      schema:
        type: string
        format: uuid
      required: false

    PersonIDQuery:
      name: person_id
      in: query
      schema:
        type: string
        format: uuid
      required: false

    ObjectIDQuery:
      name: object_id
      in: query
      schema:
        type: string
        format: uuid
      required: false

    PeriodQuery:
      name: period
      in: query
      schema:
        type: string
        format: mm.yyyy
      required: false

    PaymentIDQuery:
      name: payment_id
      in: query
      schema:
        type: string
        format: mm.yyyy
      required: false

  requestBodies:

    Credentials:
      required: true
      content:
        'application:json':
          schema:
            type: object
            properties:
              login:
                type: string
              password:
                type: string
            required: [ login, password ]

    Token:
      required: true
      content:
        'application/json':
          schema:
            type: object
            properties:
              token:
                type: string

    AccountData:
      required: true
      content:
        'application/json':
          schema:
            $ref: "#/components/schemas/AccountData"

    PersonData:
      required: true
      content:
        'application/json':
          schema:
            $ref: "#/components/schemas/PersonData"

    ObjectData:
      required: true
      content:
        'application/json':
          schema:
            $ref: "#/components/schemas/ObjectData"

    TargetData:
      required: true
      content:
        'application/json':
          schema:
            $ref: "#/components/schemas/TargetData"

    BillData:
      required: true
      content:
        'application/json':
          schema:
            $ref: "#/components/schemas/BillData"

    PaymentDataForUpdate:
      required: true
      content:
        'application/json':
          schema:
            $ref: "#/components/schemas/PaymentData"

    PaymentDataForInsert:
      required: true
      content:
        'application/json':
          schema:
            allOf:
              - $ref: "#/components/schemas/PaymentFixed"
              - $ref: "#/components/schemas/PaymentData"

  responses:

    AuthInfo:
      description: OK
      content:
        'application/json':
          schema:
            type: object
            properties:
              jwt_token:
                type: string
              user_id:
                type: string
                format: uuid
              context:
                type: array
                items: { type: string }
              refresh_token:
                type: string

    Account:
      description: "Account information"
      content:
        'application/json':
          schema:
            type: object
            properties:
              meta:
                $ref: "#/components/schemas/Meta"
              data:
                $ref: "#/components/schemas/Account"

    Accounts:
      description: "List of Accounts"
      content:
        'application/json':
          schema:
            type: object
            properties:
              meta:
                $ref: "#/components/schemas/Meta"
              data:
                type: array
                items:
                  $ref: "#/components/schemas/Account"

    Person:
      description: "Person information"
      content:
        'application/json':
          schema:
            type: object
            properties:
              meta:
                $ref: "#/components/schemas/Meta"
              data:
                $ref: "#/components/schemas/Person"

    Persons:
      description: "List of persons"
      content:
        'application/json':
          schema:
            type: object
            properties:
              meta:
                $ref: "#/components/schemas/Meta"
              data:
                type: array
                items:
                  $ref: "#/components/schemas/Person"

    Object:
      description: "Object information"
      content:
        'application/json':
          schema:
            type: object
            properties:
              meta:
                $ref: "#/components/schemas/Meta"
              data:
                $ref: "#/components/schemas/Object"

    Objects:
      description: "List of objects"
      content:
        'application/json':
          schema:
            type: object
            properties:
              meta:
                $ref: "#/components/schemas/Meta"
              data:
                type: array
                items:
                  $ref: "#/components/schemas/Object"

    Target:
      description: "Target information"
      content:
        'application/json':
          schema:
            type: object
            properties:
              meta:
                $ref: "#/components/schemas/Meta"
              data:
                $ref: "#/components/schemas/Target"

    Targets:
      description: "List of Targets"
      content:
        'application/json':
          schema:
            type: object
            properties:
              meta:
                $ref: "#/components/schemas/Meta"
              data:
                type: array
                items:
                  $ref: "#/components/schemas/Target"

    Bill:
      description: "Bill information"
      content:
        'application/json':
          schema:
            type: object
            properties:
              meta:
                $ref: "#/components/schemas/Meta"
              data:
                $ref: "#/components/schemas/Bill"

    Bills:
      description: "List of Bills"
      content:
        'application/json':
          schema:
            type: object
            properties:
              meta:
                $ref: "#/components/schemas/Meta"
              data:
                type: array
                items:
                  $ref: "#/components/schemas/Bill"

    Payment:
      description: "Payment information"
      content:
        'application/json':
          schema:
            type: object
            properties:
              meta:
                $ref: "#/components/schemas/Meta"
              data:
                $ref: "#/components/schemas/Payment"

    Payments:
      description: "List of Payments"
      content:
        'application/json':
          schema:
            type: object
            properties:
              meta:
                $ref: "#/components/schemas/Meta"
              data:
                type: array
                items:
                  $ref: "#/components/schemas/Payment"

  schemas:

    Meta:
      type: object
      properties:
        status:
          type: string
          enum: [QueryError, InternalError, Forbidden, Unauthorized, NotFound, Ok]
        message:
          type: string
      required: [status]

    Account:
      description: "Account information"
      allOf:
        - $ref: "#/components/schemas/AccountHead"
        - $ref: "#/components/schemas/AccountData"

    AccountHead:
      description: "Unchangeable part of Account"
      type: object
      properties:
        account_id:
          type: string
          format: uuid
        persons:
          type: array
          items:
            $ref: "#/components/schemas/Person"
        objects:
          type: array
          items:
            $ref: "#/components/schemas/Object"
      required: [account_id]

    AccountData:
      description: "Changeable part of Account"
      type: object
      properties:
        account:
          type: string
        cad_number:
          type: string
          format: "^\\d+:\\d+:\\d{6-7}:\\d+$"
          example: "32:54:836619:43"
        agreement:
          type: string
        agreement_date:
          type: string
          format: date-time
        purchase_kind:
          type: string
        purchase_date:
          type: string
          format: date-time
        comment:
          type: string
      required: [account]

    Person:
      description: "Person information"
      allOf:
        - $ref: "#/components/schemas/PersonHead"
        - $ref: "#/components/schemas/PersonData"

    PersonHead:
      description: "Unchangeable part of Person"
      type: object
      properties:
        person_id:
          type: string
          format: uuid
      required: [person_id]

    PersonData:
      description: ""
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        pat_name:
          type: string
        dob:
          type: string
          format: date-time
        is_member:
          type: boolean
        phone:
          type: string
        email:
          type: string

    Object:
      description: "Object information"
      allOf:
        - $ref: "#/components/schemas/ObjectHead"
        - $ref: "#/components/schemas/ObjectData"

    ObjectHead:
      description: "Unchangeable part of Object"
      type: object
      properties:
        object_id:
          type: string
          format: uuid
      required: [object_id]

    ObjectData:
      description: "Changeable part of Object"
      type: object
      properties:
        postal_code:
          type: string
        city:
          type: string
        village:
          type: string
        street:
          type: string
        number:
          type: integer
        area:
          type: number
          format: float
      required: [number]

    Target:
      description: "Purpose of the fee"
      allOf:
        - $ref: "#/components/schemas/TargetHead"
        - $ref: "#/components/schemas/TargetData"

    TargetHead:
      description: "Unchangeable part og Target data"
      type: object
      properties:
        target_id:
          type: string
          format: uuid
        type:
          $ref: "#/components/schemas/TargetType"
      required: [target_id, type]

    TargetType:
      description: "Short description about Target"
      type: string
      maxLength: 64

    TargetData:
      description: "Changeable part og Target data"
      type: object
      properties:
        period:
          $ref: "#/components/schemas/Period"
        closed:
          type: string
          format: date-time
        cost:
          type: number
          format: float
        comment:
          type: string
      required: [period, cost]

    Bill:
      description: "Charges to be paid"
      allOf:
        - $ref: "#/components/schemas/BillHead"
        - $ref: "#/components/schemas/BillData"

    BillHead:
      description: "Unchangeable part of Bill"
      type: object
      properties:
        bill_id:
          type: string
          format: uuid
        account_id:
          type: string
          format: uuid
      required: [bill_id, account_id]

    BillData:
      description: "Changeable part of Bill"
      type: object
      properties:
        formed:
          type: string
          format: date-time
        object_id:
          type: string
          format: uuid
        period:
          $ref: "#/components/schemas/Period"
        target:
          $ref: "#/components/schemas/TargetHead"
        bill:
          type: number
          format: float
          minimum: 1
        payment_linked:
          description: "UUID of Payments"
          type: array
          items:
            type: string
            format: uuid
      required: [formed, period, target, bill]

    Payment:
      description: "Payment that paid"
      allOf:
        - $ref: "#/components/schemas/PaymentHead"
        - $ref: "#/components/schemas/PaymentFixed"
        - $ref: "#/components/schemas/PaymentData"

    PaymentHead:
      description: "Unchangeable part of Payment data"
      type: object
      properties:
        payment_id:
          type: string
          format: uuid
        account_id:
          type: string
          format: uuid
      required: [payment_id, account_id]

    PaymentFixed:
      description: "Fixed part of Payment data"
      type: object
      properties:
        payment:
          type: number
          format: float
        payment_date:
          type: string
          format: date-time
      required: [payment]

    PaymentData:
      description: "Changeable part of Payment data"
      type: object
      properties:
        person_id:
          type: string
          format: uuid
        object_id:
          type: string
          format: uuid
        period:
          $ref: "#/components/schemas/Period"
        target:
          $ref: "#/components/schemas/TargetHead"
        receipt:
          type: string
      required: [period, target]

    Period:
      description: "Year and month of particular period"
      type: object
      properties:
        year:
          type: integer
          minimum: 1900
          maximum: 2100
        month:
          type: integer
          minimum: 1
          maximum: 12
      required: [year, month]

  securitySchemes:

    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Auth-Token
